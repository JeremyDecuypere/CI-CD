apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  namespace: {{ .Values.config.NAMESPACE }}
  labels:
    app: backend
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        ports:
        - containerPort: {{ .Values.backend.port }}
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        env:
        - name: MONGO_URI
          value: "mongodb://mongodb.{{ .Values.config.NAMESPACE }}:{{ .Values.mongodb.port }}/test"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  namespace: {{ .Values.config.NAMESPACE }}
  labels:
    app: frontend
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
        ports:
        - containerPort: {{ .Values.frontend.port }}
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        env:
        - name: BACKEND_URL
          value: "http://{{ .Values.backend.externalIP }}:{{ .Values.backend.port }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-{{ .Values.config.NAMESPACE }}
  namespace: {{ .Values.config.NAMESPACE }}
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        ports:
        - containerPort: {{ .Values.mongodb.port }}
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongo-pvc-{{ .Release.Name }}
